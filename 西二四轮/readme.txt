目录：
1、概述：项目进度的大致情况
2、目录结构：文件内各部分功能
3：存在的问题：以后应当修改的地方
4、其他可能性：有多种解决方法，我选择了我认为最优的一种，其他方法也列出作为参考
5：一些疑问：对题目和项目过程中的思考性问题


概述：
目前基本实现了题目要求，前端部分采用的css大多为网上的免费模板，部分结构参考尚硅谷javaweb教程
https://heavy_code_industry.gitee.io/code_heavy_industry/pro001-javaweb/lecture/bookstore02/verse01.html
（后期网页制作美观崩坏预警）
实现环境jdk11，MySQL+mybatis+servlet3.0+maven，部署环境为tomcat9.0+阿里云ECS服务器
日志用了log4j，但是tomcat自带的就已经很好了

目录结构：
debug：项目过程中一些bug的修改过程
sql文件：数据库建表文件
参考的html模板：网上下载的模板
网站功能使用指引：个人网站功能检测指引

存在的问题：
1.SqlSession应该是只创建一次，然后一直使用比较合适，暂时是用完销毁
2.工作量有点大，后面的大部分页面没有进行美观性的优化
3.书本分类的数据库设计，因为当时想的是每本书都有不同的类别，但是后来感觉一本书可能同时具有多个属性（比如可能既是玄幻又是都市啥的）。更改的话可能会选择设定成类似xianshi属性一样的。
4.收藏功能设计的问题，收藏的实现方法是简单的建立了一个UID和BID一一对应的表，但是每次收藏都会添加一条。解决方法可以是联立UID和BID为主键，但更重要的应该是前端对于这个的限制。我个人的想法是如果没有查询到记录就显示”收藏“文本，功能是添加，查询到就显示“已收藏”文本，功能是删除记录.

其他可能性：
1.找回密码未实装，因为加密的方法是MD5加密，非对称不可逆的加密导致无法通过存储的密码找到原密码，只能重置密码。如果要更改可能考虑添加安全框架或者使用MYSQL自带的AES进行加密。
2.第一次做网页先从底层servlet敲起，之后可能会改成spring项目
3.为了避免文件重名问题，每一个存入的要对应其ID，也就是Mysql主键，选择自增主键时考虑了多个方法，后来选择如下两个，但不确定是否合适
SELECT AUTO_INCREMENT FROM information_schema.`TABLES` WHERE TABLE_SCHEMA='HQSK' AND TABLE_NAME='BOOKBASE';
SELECT BOOK_ID  FROM BOOKBASE  ORDER BY BOOK_ID DESC LIMIT 1;
4.用户收藏的数据库设计采用ID对ID的形式，这样意味着100个人各存100条就有10000条数据了，但是对于少量数据效果还不错。如果数据量更大时或许会考虑单独建表。
5.封面只能由管理员添加（没看过啥网文不知道是不是这样啊）

一些疑问：
1、
支持不同类型的小说上传，是指什么呢？
除了txt，word，pdf等常见的还应该考虑其他种类吗。为了避免上传过多错误类型的文件，是否要对文件类型进行限制，比如说只能上传10M以内的txt或doc，pdf文档。不然的话用户完全可以用一堆垃圾数据来使服务器瘫痪
（目前的是你传什么我就接收什么，下载也是原文件，没有处理）
下载的文件是否要对上传的文件转写成txt呢？我参考了这个方法，但是这样的话上传多种种类的意义好像又没有了。
https://blog.csdn.net/GSQ518/article/details/106444759


